(program 1.0.0 ((\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> \ -> \ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> force (force (force  (\ -> \ -> force  (\ -> (\ -> (\ -> (\ -> (\ -> \ -> \ -> (\ -> \ -> \ -> \ -> \ -> \ -> \ -> \ -> \ -> \ -> force (force  (\ -> delay ( )) (delay (force (force ) (\ -> \ -> \ -> \ -> force (force   (\ -> delay ((\ -> force (force (force ifThenElse ( ( )) (delay ((\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> delay (\ ->    )) (force (force ifThenElse ( ( )) (delay ((\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> delay (\ ->      )) (unIData (force headList (force tailList )))) ( (force headList ))) (force tailList )) (unIData (force headList ))) (force tailList )) ( (force headList ))) (force tailList ( ))) (unIData (force headList ( ))))) ))) (unConstrData (force headList (force tailList )))) (force (force ifThenElse ( ( )) (delay ((\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> delay (\ ->      )) (unIData (force headList (force tailList )))) ( (force headList ))) (force tailList )) (unIData (force headList ))) (force tailList )) ( (force headList ))) (force tailList ( ))) (unIData (force headList ( ))))) ))) (unConstrData (force headList ))) (force tailList )) (force (force ifThenElse ( ( )) (delay ( (unBData (force headList ( ))) (unBData (force headList (force tailList ( )))))) ))) (unConstrData (force headList ))) ( ))) )) (\ -> \ -> \ -> force  (\ -> \ -> \ -> \ -> \ -> force  (\ -> \ -> \ -> \ -> \ -> force (force ( (\ -> \ -> \ -> force (force  (delay ) (\ -> \ -> delay (force  (\ -> \ ->  ( (\ -> \ -> \ -> \ -> force (force  (delay ) (\ -> \ -> delay (force  (\ -> \ -> force (force ifThenElse ( ) (delay (   )) (delay (  ( (delay (\ ->    )) ) ))))))))   ) )))))  )  (\ -> \ -> delay (force  (\ -> \ -> \ -> force (force  (delay (force (force ifThenElse (equalsByteString  ( )) (delay (force (force ifThenElse ( ) (delay (force (force ifThenElse ( (force (force ) (\ -> \ -> \ -> \ -> (\ ->  (\ -> \ -> force  0 (\ -> \ -> force  (\ -> \ -> force (force ifThenElse (equalsByteString  ) (delay ( (\ -> \ -> force  0 (\ -> \ -> force  (\ -> \ -> force (force ifThenElse (equalsByteString  ) (delay ) (delay ( )))))) )) (delay ( )))))) ) ( )))) (delay (force (force (force  (\ -> \ -> force (force ifThenElse (equalsByteString  ( )) (delay (  )) ))) (delay (force (force ifThenElse ( (force (force ( )) ( (\ -> \ -> force    ) (force  )) (\ -> \ -> addInteger  1)  0)) (delay (force (force ifThenElse (equalsInteger 10000 ) (delay (force (force  (delay (force (force trace "firstDevDidPhaseOne Mismatched" (delay ( ))))) (delay (force (force ifThenElse (equalsInteger 20000 ) (delay (force (force  (delay (force (force trace "secondDevDidPhaseOne Mismatched" (delay ( ))))) (delay (force (force ifThenElse (equalsInteger 1673444643000 ) (delay (force (force ifThenElse (equalsInteger 90000 ) (delay (force (force  (delay (force (force trace "firstDevDidPhaseTwo Mismatched" (delay ( ))))) (delay (force (force ifThenElse (equalsInteger 180000 ) (delay (force (force  (delay (force (force trace "secondDevDidPhaseTwo Mismatched" (delay ( ))))) (delay (force (force ifThenElse (equalsInteger 1673445243000 )  (delay (force (force trace "dateOfPhaseTwo Mismatched" (delay ( ))))))))))) (delay (force (force trace "secondDevPhaseTwoClaimAmount Mismatched" (delay ( ))))))))))) (delay (force (force trace "firstDevPhaseTwoClaimAmount Mismatched" (delay ( )))))))) (delay (force (force trace "dateOfPhaseOne Mismatched" (delay ( ))))))))))) (delay (force (force trace "secondDevPhaseOneClaimAmount Mismatched" (delay ( ))))))))))) (delay (force (force trace "firstDevPhaseOneClaimAmount Mismatched" (delay ( )))))))) (delay (force (force trace "Only 1 Output is Allowed" (delay ( )))))))) (delay (force (force trace "Happy Token Info Mismatched" (delay ( )))))))) (delay (force (force trace "Happy Token Must Be At Distro SC Output" (delay ( )))))))) ))) ))) (\ -> \ -> )))))))))) (unConstrData ))) (\ -> ))))) (delay ( )) (\ -> delay ( )))) (delay (force (force (force (force ( (\ -> \ -> delay (delay (\ -> \ -> \ -> force (force  (delay ) (\ -> \ -> delay (  (force (force ( ))   ))))))) )) (\ -> \ -> force  (\ -> \ -> \ -> \ -> force (force (  ( ( ) )) (delay (  )) (delay ))))  ) (delay ( )) (\ -> \ -> delay (force (force  (delay ) (\ -> \ -> delay ( ))))))))) (delay (force (force trace "Only 1 Happy Token Must Be Minted" (delay ( )))))) (\ -> force (force  (\ -> delay (force (force ( (force  ) ( )) (delay (force (force (  ) (delay (force (force (force )  (delay (force ( (delay ( )))))))) (delay (force (force trace "First Developer Address Mismatch" (delay ( )))))))) (delay (force (force trace "First Developer Must Sign" (delay ( )))))))) (delay ( )) (delay ( )) (\ -> delay ( ))))) (\ -> force (force  (\ -> delay ( )) (delay ( )) (delay ( )) (\ -> delay (force (force ( (force  ) ( )) (delay (force (force (  ) (delay (force (force (force )  (delay (force ( (delay ( )))))))) (delay (force (force trace "Second Developer Address Mismatch" (delay ( )))))))) (delay (force (force trace "Second Developer Must Sign" (delay ( ))))))))))) (delay (force (force ( )) ( (\ -> \ ->    ) ( )) (\ -> force  (\ -> \ -> force  (\ -> \ -> \ -> \ ->   ( ( ) )))) ))))) (delay (delay (\ -> ))) (delay (force (force trace "PT5" (delay error)))))) (\ -> force (force  (\ -> )  (delay (force (force ( (force  ) #bdc24850053ddf1e0c53bf20a518dcc4dcc5200ac4adb0056a1ded5c)  (delay (force trace "Regulator Debugger Must Sign" ))))) (\ -> )))) (force (force ifThenElse ( ( )) (delay ((\ -> (\ -> (\ -> delay (\ ->   )) ( (force headList (force tailList ( ))))) (force (force ifThenElse ( ( )) (delay ((\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> delay (\ ->             )) ( (force headList (force tailList )))) ( unBData (\ -> ) (force headList ))) (force tailList )) (  (\ -> ) (force headList ))) (force tailList )) ( unBData (force headList ))) (force tailList )) (force (force ifThenElse ( ( )) (delay ((\ -> (\ -> (\ -> (\ -> delay (\ ->   )) (force (force ifThenElse ( ( )) (delay ((\ -> (\ -> delay (\ ->   )) ( (force headList (force tailList ( ))))) ( unIData (force headList ( ))))) ))) (unConstrData (force headList (force tailList ( ))))) (force (force ifThenElse ( ( )) (delay ((\ -> (\ -> delay (\ ->   )) ( (force headList (force tailList ( ))))) ( unIData (force headList ( ))))) ))) (unConstrData (force headList ( ))))) ))) (unConstrData (force headList ))) (force tailList )) (  unIData (force headList ))) (force tailList )) (  (force headList ))) (force tailList )) ( unBData  (force headList ))) (force tailList )) ( unBData  (force headList ))) (force tailList )) (  (force headList ))) (force tailList )) (  (force headList ))) (force tailList ( ))) (  (force headList ( ))))) ))) (unConstrData (force headList ( ))))) ))) (force (force ifThenElse ( ) (delay (delay (\ -> \ -> \ -> \ -> ))) (delay (force (force ifThenElse ( ) (delay ((\ -> delay (\ -> \ -> \ -> \ ->  )) ( (force headList ( ))))) (delay (force (force ifThenElse ( ) (delay ((\ -> delay (\ -> \ -> \ -> \ ->  )) ( (force headList ( ))))) (delay (force (force ifThenElse ( ) (delay (delay (\ -> ))) )))))))))))) ( )) (unConstrData )) (unConstrData )) ( (\ -> \ -> \ ->  ( )) (\ -> ))) #48415050595f544f4b454e) (\ -> force  (\ -> \ -> force   (\ -> )  ))) (\ -> force (force trace "No TxOut To Distro SC" (delay error)))) ( ( #cbbfc3e193813ee338d40eb0f4f178d46245e0d87adc4e9e8e0be489) ( ( ( #6683a4a58711b3c82a4daea1b607b3642f00164f3f28d14edc0f5031))))) ( ( #5e822f882ae15a6598f04fdeac0e85423793c7d65164e36f3edbc48e) ( ( ( #4eed7b2060846bbccb19b08caa58ced3ad4b005daca450b5c147f97d))))) (\ -> force  (\ -> \ -> force  (\ -> ) (\ -> force (force trace "No PubKeyHash" (delay error)))))) (\ -> \ -> force  (\ -> \ -> \ -> \ -> \ -> \ -> \ -> \ -> \ -> \ -> \ -> \ -> force (force (force (force ( )) ( (\ -> \ -> force (force  (\ -> delay ) (delay ))) ) (\ -> force (force ifThenElse (equalsByteString  ) (delay ( )) )) ) (\ -> ) )))) (\ ->  (\ -> \ -> force (force   (delay ))) )) ()) (\ -> \ -> force  (\ -> \ -> force  (\ -> \ -> (\ -> force  (\ -> force  (\ -> force (force ifThenElse (equalsByteString  )  )) (\ -> )) (\ -> force  (\ -> ) (\ -> force (force ifThenElse (equalsByteString  )  )))) (delay (force (force  (\ -> delay (force (force  (\ -> delay (force  (\ -> force  (\ -> force  (\ -> force  (\ ->   ) (\ -> )) (\ -> force  (\ -> ) (\ ->   ))) (\ -> \ -> \ -> )) (\ -> \ -> \ -> force  (\ -> ) (\ -> \ -> \ -> force (force ifThenElse (equalsInteger  ) (delay (force (force ifThenElse (equalsInteger  ) (delay (force ifThenElse (equalsInteger  )  )) ))) ))))) ))) (delay (force (force  (\ -> ) )))))))))) (\ -> \ -> force ifThenElse (equalsByteString  )  )) #dc8545d996a0faf206731e6957527a2348052ec49ce600c41e0b14ee) (\ -> \ -> (\ -> (\ -> force (force ifThenElse ( ) (delay (delay (\ -> \ -> \ -> ))) (delay (force (force ifThenElse ( ) (delay ((\ -> delay (\ -> \ -> \ ->  )) ( (force headList ( ))))) (delay (force (force ifThenElse ( ) (delay (delay (\ -> \ -> \ -> ))) )))))))) ( )) (unConstrData ))) (\ -> (\ -> force (force ifThenElse ( ( )) (delay ((\ -> (\ -> delay (\ ->   )) ( (force headList (force tailList ( ))))) ( (force headList ( ))))) )) (unConstrData ))) (\ -> (\ -> force (force ifThenElse ( ( )) (delay ((\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> (\ -> delay (\ ->     )) ( unBData (force headList (force tailList )))) (force (force ifThenElse ( ) (delay ((\ -> delay (\ -> \ -> \ ->  )) (force headList ( )))) (delay (force (force ifThenElse ( ) (delay ((\ -> delay (\ -> \ -> \ ->  )) (unBData (force headList ( ))))) (delay (force (force ifThenElse ( ) (delay (delay (\ -> \ -> \ -> ))) ))))))))) ( )) (unConstrData (force headList ))) (force tailList )) ( unBData  (force headList ))) (force tailList ( ))) ( (force headList ( ))))) )) (unConstrData ))) ( unBData unIData)) (\ -> \ -> \ ->  (\ -> \ -> force (force chooseList)  (\ -> ) (\ -> (\ ->  ( ( ( )) ( ( ))) ( (force tailList ))) (force headList )) ) (unMapData ))) (\ -> \ ->  (\ -> \ -> force (force chooseList)  (\ -> ) (\ ->  ( (force headList )) ( (force tailList ))) ) (unListData ))) (\ -> (\ -> (\ -> force (force ifThenElse ( ) (delay ((\ -> delay (\ -> \ -> \ -> \ ->  )) ( (force headList ( ))))) (delay (force (force ifThenElse ( ) (delay ((\ -> delay (\ -> \ -> \ -> \ ->  )) ( (force headList ( ))))) (delay (force (force ifThenElse ( ) (delay ((\ -> delay (\ -> \ -> \ -> \ ->  )) ( (force headList ( ))))) (delay (force (force ifThenElse ( ) (delay ((\ -> delay (\ -> \ -> \ -> \ ->  )) (unBData (force headList ( ))))) ))))))))))) ( )) (unConstrData ))) (\ -> (\ -> (\ -> force (force ifThenElse (equalsInteger 6 ) (delay (delay (\ -> \ -> \ -> \ -> ))) (delay (force (force ifThenElse (equalsInteger 5 ) (delay (delay (\ -> \ -> \ -> \ -> \ -> \ -> \ -> ))) (delay (force (force ifThenElse ( ) (delay ((\ -> (\ -> delay (\ -> \ -> \ -> \ -> \ -> \ -> \ ->   )) (unIData (force headList (force tailList ( ))))) (unBData (force headList ( ))))) (delay (force (force ifThenElse ( ) (delay ((\ -> (\ -> delay (\ -> \ -> \ -> \ -> \ -> \ -> \ ->   )) (unBData (force headList (force tailList ( ))))) (unBData (force headList ( ))))) (delay (force (force ifThenElse ( ) (delay ((\ -> (\ -> delay (\ -> \ -> \ -> \ -> \ -> \ -> \ ->   )) (unBData (force headList (force tailList ( ))))) ( (force headList ( ))))) (delay (force (force ifThenElse ( ) (delay ((\ -> delay (\ -> \ -> \ -> \ -> \ -> \ -> \ ->  )) ( (force headList ( ))))) (delay (force (force ifThenElse ( ) (delay ((\ -> delay (\ -> \ -> \ -> \ -> \ -> \ -> \ ->  )) ( (force headList ( ))))) )))))))))))))))))))) ( )) (unConstrData ))) (\ -> (\ -> force (force ifThenElse ( ( )) (delay ((\ -> (\ -> delay (\ ->   )) (unIData (force headList (force tailList ( ))))) ( (force headList ( ))))) )) (unConstrData ))) (\ -> (\ -> force (force ifThenElse ( ( )) (delay (unBData (force headList ( )))) )) (unConstrData ))) (\ -> \ -> delay (\ -> \ ->   ))) (\ -> (\ -> force (force ifThenElse ( )  (delay (force (force ifThenElse ( )  ))))) ( (unConstrData )))) (delay )) (delay )) (\ -> \ -> \ -> )) (\ -> (\ -> force (force ifThenElse ( ( )) (delay ( ( (force headList ( ))) (  (force headList (force tailList ( )))))) )) (unConstrData ))) (\ -> \ -> delay (\ ->   ))) (\ -> (\ -> (\ -> force (force ifThenElse ( ) (delay ((\ -> (\ -> (\ -> (\ -> delay (\ -> \ ->    )) (unIData (force headList (force tailList )))) (unIData (force headList ))) (force tailList ( ))) (unIData (force headList ( ))))) (delay (force (force ifThenElse ( ) (delay ((\ -> delay (\ -> \ ->  )) ( (force headList ( ))))) ))))) ( )) (unConstrData ))) (\ -> (\ -> (\ -> force (force ifThenElse ( ) (delay ( (unBData (force headList ( ))))) (delay (force (force ifThenElse ( ) (delay ((\ -> delay (\ -> \ ->  )) (unBData (force headList ( ))))) ))))) ( )) (unConstrData ))) (\ -> delay (\ -> \ ->  ))) (\ -> \ -> (\ -> (\ -> force (force ifThenElse ( ) (delay ( ( (force headList ( ))))) (delay (force (force ifThenElse ( )  ))))) ( )) (unConstrData ))) (delay )) (delay )) (\ -> delay (\ -> \ ->  ))) ( (\ -> \ -> delay (delay (\ -> \ -> \ -> force (force  (delay (force  )) (\ -> \ -> delay (force   ( ) (force (force ( ))   ))))))))) (delay (\ -> ))) (\ -> \ -> )) (\ -> \ -> )) (force trace "Distro Contract Must Be Present at Tx")) (delay (force (force trace "No Inline Datum" (delay error))))) (delay (force (force trace "PT1" (delay error))))) (\ -> force (force trace "Lh" (delay error)))) (equalsInteger 0)) (equalsInteger 1)) (equalsInteger 2)) (equalsInteger 3)) (equalsInteger 4)) (force (force sndPair))) (force (force fstPair))) (\ -> (\ ->  ) (\ -> \ ->  ( ) ))))